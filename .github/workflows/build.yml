name: "Build / Grype"
on:
    pull_request:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'
        branches: [ main ]
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ ubuntu-latest ]
            max-parallel: 1
        steps:
            -   uses: actions/checkout@v4.1.6
            -   name: Set up JDK 21
                uses: actions/setup-java@v4.2.1
                with:
                    distribution: 'temurin'
                    java-version: 21
                    architecture: x64
            -   name: Cache Maven packages
                uses: actions/cache@v4.0.2
                with:
                    path: ~/.m2
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: ${{ runner.os }}-m2-
            -   name: Build with Maven
                run: mvn --no-transfer-progress verify

    Anchore-Build-Scan:
      needs: build
      permissions:
        contents: read # for actions/checkout to fetch code
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      runs-on: ubuntu-latest
      steps:
      - name: Check out the code
        uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag localbuild/testimage:latest
      - name: Run the Anchore Grype scan action
        uses: anchore/scan-action@d5aa5b6cb9414b0c7771438046ff5bcfa2854ed7
        id: scan
        with:
          image: "localbuild/testimage:latest"
          fail-build: true
          severity-cutoff: critical
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
  